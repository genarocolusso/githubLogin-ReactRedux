[{"E:\\REACT\\studies\\eventpage\\src\\index.js":"1","E:\\REACT\\studies\\eventpage\\src\\components\\eventticket\\index.js":"2","E:\\REACT\\studies\\eventpage\\src\\App.js":"3","E:\\REACT\\studies\\eventpage\\src\\components\\registerevent\\index.js":"4","E:\\REACT\\studies\\eventpage\\src\\store\\index.js":"5","E:\\REACT\\studies\\eventpage\\src\\store\\ducks\\users.js":"6","E:\\REACT\\studies\\eventpage\\src\\store\\ducks\\index.js":"7"},{"size":199,"mtime":1607206917896,"results":"8","hashOfConfig":"9"},{"size":1344,"mtime":1607362030712,"results":"10","hashOfConfig":"9"},{"size":395,"mtime":1607360750297,"results":"11","hashOfConfig":"9"},{"size":2864,"mtime":1607361312347,"results":"12","hashOfConfig":"9"},{"size":136,"mtime":1607357015716,"results":"13","hashOfConfig":"14"},{"size":864,"mtime":1607362211562,"results":"15","hashOfConfig":"9"},{"size":122,"mtime":1607357048645,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"vdteii",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qrvu5h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\REACT\\studies\\eventpage\\src\\index.js",[],["33","34"],"E:\\REACT\\studies\\eventpage\\src\\components\\eventticket\\index.js",["35","36"],"E:\\REACT\\studies\\eventpage\\src\\App.js",[],"E:\\REACT\\studies\\eventpage\\src\\components\\registerevent\\index.js",["37","38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GoOctoface, GoCode, GoBeaker } from \"react-icons/go\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Creators as UserActions } from \"../../store/ducks/users\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterEvent = ({ user, login, isLogged }) => {\r\n   \r\n  const redirect_uri = process.env.REACT_APP_REDIRECT_URI;\r\n  const client_id = process.env.REACT_APP_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_CLIENT_SECRET;\r\n  const api = process.env.REACT_APP_API_URI;\r\n\r\n  useEffect(() => {\r\n    async function getgit() {\r\n      // After requesting Github access, Github redirects back to your app with a code parameter\r\n      const url = window.location.href;\r\n      const hasCode = url.includes(\"?code=\");\r\n\r\n      // If Github API returns the code parameter\r\n      if (hasCode) {\r\n        const newUrl = url.split(\"?code=\");\r\n        //[\"http://localhost:3000/\", \"6648b095a5756a4da61f\"]\r\n        window.history.pushState({}, null, newUrl[0]);\r\n        // show url without code.\r\n        const res = await axios.post(\r\n          `${api}/api/auth?code=${newUrl[1]}&client_id=${client_id}&client_secret=${client_secret}`\r\n        );\r\n\r\n        const access_token = res.data.split(\"&\")[0];\r\n\r\n        const resUser = await axios.get(`${api}/api/user?${access_token}`);\r\n\r\n        login(resUser.data, access_token);\r\n      }\r\n    }\r\n    getgit();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"registerEvent\">\r\n        <h2>\r\n          <GoCode className=\"green iconleft\" />\r\n          <p>\r\n            Inscrição <span className=\"green\">confirmada</span>!\r\n          </p>\r\n        </h2>\r\n\r\n        <h1> Bem-vindo(a) ao Evento</h1>\r\n\r\n        <p>\r\n          Personalize seu ticket com seu perfil do Github, conecte sua conta\r\n          abaixo!\r\n        </p>\r\n\r\n        <a\r\n          href={`https://github.com/login/oauth/authorize?scope=user&client_id=${client_id}&redirect_uri=${redirect_uri}`}\r\n        >\r\n          <button className=\"githubConnect\">\r\n            <span>\r\n              <GoOctoface />\r\n            </span>\r\n\r\n            {!isLogged ? (\r\n              <p>\r\n                Conectar\r\n                <GoBeaker className=\"gradient\" />\r\n              </p>\r\n            ) : (\r\n              <p> {user?.name ?? \"\"} </p>\r\n            )}\r\n          </button>\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n\r\n  return {\r\n    user: state.users.user,\r\n    isLogged: state.users.isLogged,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (user, token) => dispatch(UserActions.login(user, token)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterEvent);\r\n//connect recebe stado e retorna oq eu quero\r\n","E:\\REACT\\studies\\eventpage\\src\\store\\index.js",[],"E:\\REACT\\studies\\eventpage\\src\\store\\ducks\\users.js",[],"E:\\REACT\\studies\\eventpage\\src\\store\\ducks\\index.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":24,"column":15,"nodeType":"50","endLine":24,"endColumn":69},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"51","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":42,"column":6,"nodeType":"54","endLine":42,"endColumn":8,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'bindActionCreators' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'api', 'client_id', 'client_secret', and 'login'. Either include them or remove the dependency array. If 'login' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [api, client_id, client_secret, login]",{"range":"61","text":"62"},[1493,1495],"[api, client_id, client_secret, login]"]